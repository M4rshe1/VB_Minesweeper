<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>